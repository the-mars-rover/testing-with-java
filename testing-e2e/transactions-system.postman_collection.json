{
	"info": {
		"_postman_id": "90fd2932-bdd5-42e9-a34d-fbc007c55cb9",
		"name": "transactions-system",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19286357"
	},
	"item": [
		{
			"name": "Successful Transaction",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"from\":\"000000001\",\n  \"to\":\"000000002\",\n  \"amount\": 999.99\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8082/transactions",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"transactions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Transaction with Amount too Large",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//parse the response JSON and test three properties",
							"const responseJson = pm.response.json();",
							"",
							"pm.test(\"Status code is 400\", () => {",
							"  pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"The response body has the correct value for the `status` field\", () => {",
							"    pm.expect(responseJson.status).to.eql(400);",
							"});",
							"",
							"pm.test(\"The response body has the correct value for the `error` field\", () => {",
							"    pm.expect(responseJson.error).to.eql('Bad Request');",
							"});",
							"",
							"pm.test(\"The response body has the correct value for the `path` field\", () => {",
							"    pm.expect(responseJson.path).to.eql('/transactions');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"from\":\"000000001\",\n  \"to\":\"000000003\",\n  \"amount\": 9999999.99\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8082/transactions",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"transactions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Transaction with Amount too Small",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//parse the response JSON and test three properties",
							"const responseJson = pm.response.json();",
							"",
							"pm.test(\"Status code is 400\", () => {",
							"  pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"The response body has the correct value for the `status` field\", () => {",
							"    pm.expect(responseJson.status).to.eql(400);",
							"});",
							"",
							"pm.test(\"The response body has the correct value for the `error` field\", () => {",
							"    pm.expect(responseJson.error).to.eql('Bad Request');",
							"});",
							"",
							"pm.test(\"The response body has the correct value for the `path` field\", () => {",
							"    pm.expect(responseJson.path).to.eql('/transactions');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"from\":\"000000001\",\n  \"to\":\"000000003\",\n  \"amount\": 0.99\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8082/transactions",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"transactions"
					]
				}
			},
			"response": []
		}
	]
}